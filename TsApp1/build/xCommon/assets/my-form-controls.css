/* top right bottom left*/
/*
E[foo~="warning"] will select any element that has warning it a space separated list. Like this: <el foo="test warning etc" />
.fCell-6+.fCell-6 {
.formx .fCell-6:not(:last-child) input {
*/
.formx {
  padding: 5px 10px;
  font-size: 1em;
}

.ffieldset {
  padding: 0;
  border: 0;
}

.fRow {
  display: flex;
  align-items: flex-start;
  flex-wrap: wrap;
  flex-direction: row;
}

.fSubRow {
  display: flex;
  align-items: flex-start;
  flex-wrap: wrap;
  flex-direction: row;
}

.fCell {
  flex: 1;
}

.fCell-12 {
  flex: 1;
  zwidth: 100%;
}

.fCell-6 {
  flex: 0.48;
  zwidth: 100%;
}

.fCell-6-space {
  flex: 0.04;
  zmin-width: 15px;
}

.val-err {
  color: red;
  font-size: 0.9em;
}

input:not([type]) {
  display: block;
}

input {
  display: block;
}

input[type=file],
input[type=radio],
input[type=checkbox] {
  display: unset;
}

.ff-label {
  display: block;
  font-size: 0.8em;
  color: #666;
  opacity: 0.9;
  margin-top: 15px;
}

.cb-label,
.radio-label {
  display: inline-block;
  font-size: 0.8em;
  zcolor: #666;
  zopacity: 0.9;
  margin-top: 15px;
}

.content-label-inline-block label {
  display: inline-block;
}

.content-input-inline-block input {
  display: inline-block;
}

fieldset.initial {
  display: block;
  margin-left: 2px;
  margin-right: 2px;
  padding-top: 0.35em;
  padding-bottom: 0.625em;
  padding-left: 0.75em;
  padding-right: 0.75em;
  border: 1px groove;
}

.audit-info {
  margin-top: 0.5em;
  font-size: 10pt;
  display: inline-block;
  color: #888;
}

.ff-control {
  display: inline-block;
  width: 100%;
  padding-top: 6px;
  padding-bottom: 6px;
  padding-left: 3px;
  padding-right: 5px;
  font-size: 12pt;
  color: #555;
  border-radius: 4px;
  border: 1px solid #ccc;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
}

input[type=file]:focus,
input[type=radio]:focus,
input[type=checkbox]:focus {
  outline: thin dotted #333;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

.ff-control:focus {
  border-color: #66afe9;
  outline: 0;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
}

.ff-control:invalid {
  border-left: 3px solid red;
}

.ff-control:invalid::after {
  content: "*";
}

.ff-control:disabled {
  border: 1px solid #ddd;
  background-color: #eee;
}

input.ff-control:required {
  border-right: 1px solid blue;
}

textarea.ff-control:required {
  border-right: 2px solid blue;
}

input:out-of-range {
  border: 2px solid red;
}

input:in-range + label::after {
  content: "";
}

input:out-of-range + label::after {
  content: "out of range!";
}

input[readonly] {
  background-color: #efefef;
}

option:checked {
  box-shadow: 0 0 0 3px lime;
  color: darkorchid;
}

.input1::placeholder {
  color: #003BDE;
  font-weight: 700;
  opacity: 1;
  font-style: italic;
  text-align: center;
}

/*# sourceMappingURL=my-form-controls.css.map */
