/* top right bottom left*/
/*
E[foo~="warning"] will select any element that has warning it a space separated list. Like this: <el foo="test warning etc" />
.fCell-6+.fCell-6 {
.formx .fCell-6:not(:last-child) input {
*/
.formx {
    //zmargin: 0px 30px 10px 5px;
    //zbackground-color: #eee;
    padding: 5px 10px;
    font-size: 1em;
}

.ffieldset {
    padding: 0;
    border: 0;
}

.fRow {
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;
    flex-direction: row;
}

.fSubRow {
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;
    flex-direction: row;
}

.fCell {
    flex: 1.0;
}

.fCell-12 {
    flex: 1;
    zwidth: 100%;
}

.fCell-6 {
    flex: .48;
    zwidth: 100%;
}

.fCell-6-space {
    flex: .04;
    zmin-width: 15px;
}

.val-err {
    color: red;
    font-size: .9em;
}

input:not([type]) {
    display: block;
}

input {
    display: block;
}

input[type="file"],
input[type="radio"],
input[type="checkbox"] {
    display: unset;
}


.ff-label {
    display: block;
    //font-weight: bold;
    font-size: 0.8em;
    color: #666;
    opacity: 0.9;
    margin-top: 15px;
}

.cb-label,
.radio-label {
    display: inline-block;
    //font-weight: bold;
    font-size: 0.8em;
    zcolor: #666;
    zopacity: 0.9;
    margin-top: 15px;
}

.content-label-inline-block label {
    display: inline-block;
}

.content-input-inline-block input {
    display: inline-block;
}

fieldset.initial {
    display: block;
    margin-left: 2px;
    margin-right: 2px;
    padding-top: 0.35em;
    padding-bottom: 0.625em;
    padding-left: 0.75em;
    padding-right: 0.75em;
    border: 1px groove;
}

.audit-info {
    margin-top: 0.5em;
    font-size: 10pt;
    display: inline-block;
    //zfont-family: 'Courier New', Courier, monospace;
    color: #888;
}

.ff-control {
    display: inline-block;
    width: 100%;
    //zheight: 34px;

    //zpadding: 6px 6px;
    //padding: 6px 0px;
    padding-top: 6px;
    padding-bottom: 6px;
    padding-left: 3px;
    padding-right: 5px;

    font-size: 12pt;

    // zmargin-left: 5px;
    // zfont-size: 14px;
    // zline-height: 1.42857143;
    color: #555;
    // zbackground-color: #fff;
    // zbackground-image: none;
    border-radius: 4px;
    border: 1px solid #ccc;

    //-webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    //-webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
    //-o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
}

input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
    outline: thin dotted #333;
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
}

// .form-control[disabled],
// .form-control[readonly],
// fieldset[disabled] .form-control {
//     cursor: not-allowed;
//     background-color: #eeeeee;
// }


.ff-control:focus {
    //border: 1px solid red;
    border-color: #66afe9;
    outline: 0;
    //-webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
}

// .ff-control:valid {
//     border: 1px solid #ccc;
//     zborder: 20px solid black;
// }
.ff-control:invalid {
    //zborder: 2px dashed red;
    //border: 1px solid #bbb;
    border-left: 3px solid red;
    //zcontent: "dd";
}

.ff-control:invalid::after {
    content: '*';
}

//A readonly element is just not editable, but gets sent when the according form submits. A disabled element isn't editable and isn't sent on submit
.ff-control:disabled {
    border: 1px solid #ddd;
    //zborder: 2px solid black;
    background-color: #eee;
}

// input.ff-control {sd
//     //font-size: 12pt;
// }

//input,select,
input.ff-control:required {
    border-right: 1px solid blue;
}

textarea.ff-control:required {
    border-right: 2px solid blue;
}

// .ff-control:required::after {
//     content: '*';
// }

:optional:after {
    //position: absolute;
    //left: 100%;
    //content: 'optional';
}

input:in-range {
    //background-color: rgba(0, 255, 0, 0.25);
}

input:out-of-range {
    //background-color: rgba(255, 0, 0, 0.25);
    border: 2px solid red;
}

input:in-range+label::after {
    content: '';
}

input:out-of-range+label::after {
    content: 'out of range!';
}

input[readonly] {
    //border: 1px solid #ccc;
    background-color: #efefef;
}

option:checked {
    box-shadow: 0 0 0 3px lime;
    color: darkorchid;
}

.input1::placeholder {
    color: #003BDE;
    font-weight: 700;
    opacity: 1;
    font-style: italic;
    text-align: center;
}