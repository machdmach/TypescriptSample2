/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Tooltip */
.tooltipx {
    position: relative;
    display: inline-block;
    border-bottom: 1px dotted black;

    .tooltiptext {
        //visibility: hidden;
        display: none;
        background-color: lightyellow;
        color: black;
        text-align: left;
        border: 1px solid grey;
        border-radius: 4px;
        padding: 2px 5px;
        //margin: 30px;
        position: absolute;
        z-index: 1;
        box-sizing: border-box;

        //left: 50%;
        //left: 0px;
        right: 0px;
        bottom: 100%;
        /* Fade in tooltip - takes 1 second to go from 0% to 100% opac: */
        //opacity: 1;
        //transition: opacity 1s;
        //transition-timing-function: ease-out;
        //ztransition-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
    }

    &:hover .tooltiptext {
        //zvisibility: visible;
        display: inline-block;
        //opacity: 1;
    }

    //end of tooltipx
}

.localDevOnly,
.localDevOnly label {
    display: none !important;
    color: darkviolet !important;
    text-shadow: 1px 0px #007bff;
    // ztext-decoration: line-through;
    // ztext-decoration-line: underline !important;
    // ztext-decoration-color: green !important;
    // ztext-decoration-style: wavy !important;
}

.sideBarDevLinks {
    //all: revert !important;
}

.sideBarDevLinks {
    background-color: lightskyblue;
    list-style: none;
    padding-left: 5px;
    position: fixed;
    z-index: 1101;
    bottom: 40px;
    right: 10px;
    min-width: 260px;
    //max-height: 100vh;
    font-size: 1rem;
}

details.sideBarDevLinks>summary {
    padding: 2px 6px;
    //width: 15em;
    background-color: #ddd;
    border: none;
    box-shadow: 3px 3px 4px black;
    cursor: pointer;
}

.sideBarDevLinks li {
    margin-bottom: .5rem;
}

@media screen and (max-width:1000px) {
    .sideBarDevLinks {
        display: none;
    }
}

.clsDisplayCount {
    background-color: red;
    //lbCounterElt.style.fontSize = '30pt';
    position: fixed;
    bottom: 25px;
    right: 10px;
    z-index: 1102;
    padding: 2px 5px;
}


.hover-hilite:hover {
    background-color: lightyellow !important;
}

.appUserManualLink {
    z-index: 1101;
    position: fixed;
    top: 2px;
    right: 150px;
    border: 1px yellow solid !important;
    border-radius: 40px !important;
    font-size: 1rem !important;

    // &:hover {
    //     //border-radius: 140px;
    //     //font-size: larger;
    // }

    &:disabled {
        opacity: 0.3;
        border: 1px solid #999;
        background-color: #ccc;
        //color: #666666;
        color: #999;
    }
}

#lbBottomLeft {
    font-size: smaller;
}

/* Safari */
@-webkit-keyframes spin {
    0% {
        -webkit-transform: rotate(0deg);
    }

    100% {
        -webkit-transform: rotate(360deg);
    }
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}


@keyframes fadein {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

// <div>This is a <span class="tick-mark"></span> tick mark</div>
.tick-mark {
    position: relative;
    display: inline-block;
    width: 30px;
    height: 30px;

    &::before {
        position: absolute;
        left: 0;
        top: 50%;
        height: 50%;
        width: 3px;
        background-color: #336699;
        content: "";
        transform: translateX(10px) rotate(-45deg);
        transform-origin: left bottom;
    }

    &::after {
        position: absolute;
        left: 0;
        bottom: 0;
        height: 3px;
        width: 100%;
        background-color: #336699;
        content: "";
        transform: translateX(10px) rotate(-45deg);
        transform-origin: left bottom;
    }
}

// <div id="container" data-point="14">Post 1</div>
/* content of pseudo-element will be set to the current value of "data-point" */
#container1::before {
    content: attr(data-point);
}

/* set color of pseudo-element to red when data-point=50 */
#container1[data-point="50"]::before {
    color: red;
}


.tooltipx2 {

    //elt1.dataset.score=10;
    &::after {
        position: absolute;
        top: -10px;
        content: attr(data-score);
        opacity: 0;
        transition: 2s;
    }

    &:hover::after {
        opacity: 1;
    }

    &[data='100']::after {
        color: #c00;
    }
}

.center-eg {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

/* Add a pseudo-element inside the target element */
.url-target-eg:target::before {
    font: 70% sans-serif;
    content: "â–º";
    color: limegreen;
    margin-right: .25em;
}


.statusBar {
    position: fixed;
    visibility: hidden;
    right: 0px;
    top: 5px; //to bet set later
    z-index: 20013;
    font-size: 1.3rem;
    //animation: blink-1 1s 1 both; // infinite both;
    //direction: rtl;
    //margin-left: 5px;
    display: flex;
    flex-direction: row-reverse;
    align-items: flex-end;
    align-content: flex-end;
    zbackground-color: lightcoral;
    //vertical-align: bottom;

    //height: 150px;
    &>* {
        display: inline-block;
        align-content: center;

        justify-content: center;
        align-self: stretch;
    }

    & .statusBarMesgWrapper {
        //vertical-align: bottom;
        //display: flex;
        ////height: 100%;
        //display: relative;

        & .statusBarMesg {
            //vertical-align: bottom;
            //position: absolute;
            //bottom: 0px;


            // display: table-cell;
            // vertical-align: bottom;
            //display: inline-block;
            //align-self: flex-end;

            opacity: 1;
            transition-duration: 5s;
            transition-property: opacity;

            background-color: #ececd7;
            //background-color: green;
            //filter: opacity(1);
            //width: 220px;
            width: 100%;
            // transition: all 200ms ease;
            // transition-property: box-shadow, height, width, background, font-size;
            //transition: width 3s ease-in, opacity 3s;
            //transition-delay: 3s;
            overflow: hidden;
            white-space: nowrap;
            text-align: right;
            //position: relative;
            height: 100%;

            padding: 0px 5px;
            padding-top: 4px;

            &::before {
                content: ' -- ';
            }

            &::after {
                content: ' -- ';
            }

            &:hover {
                //outline: 1px solid green;
            }

            outline: 1px dashed lightgreen;
        }
    }

    & .statusBarButtonWrapper {
        text-align: center;

        zbackground-color: red;
        //padding-left: 10px;
        //height: 100%;

        //padding-right: 5px;
        //& .statusBarBtn {
        & button {
            //zheight: 100%;
            //border: 2px solid gray;
            border-radius: 2px;
            font-size: 1.3rem;
            color: #777;
            //color: red;
            cursor: pointer;

            // &:hover+div {
            //     display: inline-block;
            //     opacity: 1;
            //     background-color: green;
            // }

            &:hover {
                color: black;
                //font-size: larger;
                outline: 1px dotted blue;
                //border-left: 3px solid lightblue;
                //border-right: 3px solid lightblue;
            }

        }
    }

    // & .zzstatusBarButtonWrapper:hover+div {
    //     display: inline-block;
    //     opacity: 1;
    //     background-color: green;
    // }
}

.topParentLink {
    position: fixed;
    top: 5px;
    left: 3px;
}

//<button id="fs-toggle">Toggle Fullscreen</button>
#fs-toggle:not(:fullscreen) {
    background-color: #afa;
}

#fs-toggle:fullscreen {
    background-color: #faa;
}


.pageNavigator {
    text-align: center;
    font-size: 1.1em;
}

.pageNavigatorControl {
    display: inline-block;
    margin-left: 10px;
}

//=============================================================
.appMenuItemSelected {
    text-decoration: underline;
    font-size: larger;
    color: yellow;
    text-shadow: 1px 2px green;
}